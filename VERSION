v0.5.8: Performance optimizations, additional core and SIMD tests
  - add exception handling for worker threads, check for out-of-memory
  - refine exception handling, per-frame memory estimates
  - extended core test coverage, run level 10 to 12
  - eliminate division in rtgeom routines to avoid corner cases
  - fix bbox adjust optimization, add pixel equality macro to core test
  - add border margin checks to more rtgeom routines, code clean up
  - extended SIMD test coverage, run level 10 to 12
  - core and SIMD test framework clean up, makefiles adjustments
  - add cube root instruction to SIMD test framework
  - extended SIMD test coverage, run level 13, move rtarch files to config
  - extended core test coverage, run level 13, add credits for borrowed code
  - adjust bbox faces to have counter-clockwise verts order for front side

v0.5.7: Performance optimizations, core test framework
  - add runtime flags for respective optimizations
  - adjust classes access levels according to actual use
  - add new flags for bbox/cbox adjust optimization, multi-threading
  - unify runtime optimization flags with conditional compilation
  - add core test framework, run levels 1 and 2, scene data locking
  - fix matrix splitting for scaling fastpath, add new flag
  - core test framework, run levels 3 to 7
  - fix missing condition for boundless surfaces
  - core test framework, run levels 8 and 9
  - fix condition for bbox shadow optimization, adjust run level 6
  - handle corner cases properly in rtgeom routines, simplify logic
  - rename rtload files to rtimag for image library, update build instructions

v0.5.6: Performance optimizations, bounding volume for array of objects
  - calculate bounding sphere for array of objects
  - add support for bounding volume arrays (bvnodes) to rendering backend
  - add bvnode support to scene format, object classes
  - insert bvnodes into surface, shadow lists
  - add bvnode properties to scene data
  - fix visual artifacts for Linux platform under heavy load (browser + flash)

v0.5.5: Performance optimizations, multi-phase threading and other refinements
  - add support for multi-phase (with sync points) threaded update and render
  - split part of hierarchical update into a separate multi-threaded phase
  - refine bounding and clipping boxes based on custom clippers
  - only update changing parts of the object hierarchy and surface data
  - move inverse matrix calculation from hierarchical to multi-threaded phase

v0.5.4: Performance optimizations, custom per-side lists
  - add generic surface coeffs to object classes
  - add clipped surface side visibility routines for given point
  - build separate light lists for each side of the surface
  - add clipped surface side visibility routines for given bbox
  - build separate shadow lists for each side of the surface
  - build separate surface lists for each side of the surface

v0.5.3: Performance optimizations, custom shadow lists
  - add bounding sphere to object classes
  - build custom per-surface per-light shadow lists
  - refine shadows optimization with bounding boxes

v0.5.2: Performance optimizations, transform caching and scaling fastpath
  - add transform caching (trnodes) to object classes
  - insert trnodes into clipper, surface and tile lists
  - implement transform caching in rendering backend, optimize for clippers
  - refactor transform code in rendering backend for scaling fastpath
  - split axis mapping from scale-only transform matrix
  - implement scaling fastpath in rendering backend
  - add Node class to object classes, rebase Array and Surface
  - use trnode's matrix for normals in rendering backend, simplify logic
  - add more comments, refine state logging, label names, classes access levels

v0.5.1: Performance optimizations, tiled rendering
  - adjust bounding and clipping boxes according to surface shape
  - add bounding box geometry, update vertices according to transform
  - add bounding box projection routines for tiled rendering
  - add tilebuffer support to backend structures, scene manager
  - implement tilebuffer in rendering backend, add support for tiles highlight
  - clean up state logging macros, refine per-frame allocs estimates

v0.5.0: Performance optimizations, multi-threading support
  - add multi-threading framework to scene manager, rendering backend
  - add multi-threading implementation for Linux, Win32 platforms
  - fix crashes in fullscreen mode for Linux platform, clean up FPS logging
  - add support for temporary per-frame heap allocs
  - add logging for scene state, support for log redirect
  - clean up names for makefile flags, backend flags

v0.4.1: Geometry transform, custom clipping with accumulator
  - add clipping accum to backend structures, scene format, object classes
  - add sub-array indexing to scene format, object classes
  - implement clipping accum in rendering backend
  - fix texture load macro, add texture crate01, texture embedding flag
  - add box object to scene data, material for crate01, red01, adjust ambient
  - add scene namespaces to resolve name collisions
  - add clipping accum with boxes, quadric shapes to scene data

v0.4.0: Geometry transform, free-angle rotation and axis scaling
  - add transform matrix to backend structures, object classes
  - add inverse matrix computation to geometry utils
  - implement transform in rendering backend
  - add transform to scene data, adjust formatting

v0.3.6: Lighting & effects, full screen anti-aliasing
  - add anti-aliasing mode to backend structures, scene manager
  - implement anti-aliasing in rendering backend
  - add anti-aliasing selection to demo app, refactor key handling
  - fix ray vertical positioning for non-aa mode

v0.3.5: Lighting & effects, compute attenuation
  - add attenuation properties to backend structures, object classes
  - implement attenuation in rendering backend
  - add attenuation to scene data

v0.3.4: Lighting & effects, specular highlights for metals and non-metals
  - add specular properties to backend structures, object classes
  - implement specular highlights in rendering backend
  - add specular highlights to scene data, adjust materials naming scheme

v0.3.3: Lighting & effects, compute refractions
  - add refraction properties to backend structures, object classes
  - implement refractions in rendering backend
  - add refractions to scene data

v0.3.2: Lighting & effects, compute reflections
  - add surface lists to scene manager
  - add reflection properties to backend structures, object classes
  - implement reflections in rendering backend
  - add reflections to scene data

v0.3.1: Lighting & effects, hard shadows
  - add shadows to scene manager
  - implement shadows in rendering backend

v0.3.0: Lighting & effects, compute diffuse
  - add lighting to backend structures, object classes
  - implement lighting in rendering backend
  - add lighting to scene data

v0.2.2: Quadric solvers, compute normals
  - add normals computation to rendering backend
  - add camera animator to scene data

v0.2.1: Quadric solvers, custom clipping by surface
  - add custom clipping to backend structures, object classes
  - implement custom clipping in rendering backend
  - add custom clipping to scene data

v0.2.0: Quadric solvers, multiple of 90 degree rotation
  - add quadric surfaces to backend structures, object classes
  - implement quadric surfaces in rendering backend
  - add cylinders and spheres to scene data

v0.1.2: Plane solver, basic texturing
  - add basic texturing to backend structures, object classes
  - implement basic texturing in rendering backend
  - add simple tile texture to scene data
  - implement BMP texture loader and texture conversion for embedding

v0.1.1: Plane solver, axis clipping
  - add axis clipping to backend structures, object classes
  - implement axis clipping in rendering backend
  - adjust scene data for clipped plane to be visible

v0.1.0: Plane solver, first rays out!
  - reorganize directory structure for the engine
  - add backend structures, object classes, scene manager
  - add first scene data, main app window and scene rendering

v0.0.5: Unified SIMD assembler, API freeze for the engine
  - instructions naming scheme finalized
  - change ARM instructions to set flags
  - added framework for internal constants (used by reciprocals)
  - fix div in ARM to use signed integers
  - increase div, sqr precision for MPE

v0.0.4: SIMD test framework, macro assembler overhaul
  - macro expansion reworked for better compiler compatibility
  - immediate/displacement parameters handling redesigned
  - added reciprocal support for SSE, MPE support refined

v0.0.3: SIMD test framework, run level 9
  - tests for integer mul, div, jmp instructions
  - SIMD tests for integer add, shl, shr instructions
  - SIMD tests for cvt, sqr, rsq instructions

v0.0.2: SIMD test framework, run level 5
  - SIMD tests for mul, div, cmp instructions

v0.0.1: SIMD test framework, run level 1
  - SIMD tests for add, sub instructions

v0.0.0: Empty project
  - initial file set and directory structure
