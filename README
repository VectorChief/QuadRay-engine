QuadRay engine is a realtime raytracing project aimed at full SIMD utilization
on ARM, MIPS, Power and x86 architectures. The efficient use of SIMD is achieved
by processing four rays at a time to match SIMD register width (hence the name).
The rendering core of the engine is written on a unified SIMD assembler
allowing single assembler code to be compatible with different processor
architectures, thus reducing the need to maintain multiple parallel versions.

At present, Intel SSE/SSE2/SSE4 and AVX/AVX2/AVX-512 (32/64-bit x86 ISAs),
ARMv7 NEON/NEONv2, ARMv8:AArch32 NEON and AArch64 NEON (32/64-bit ARM ISAs),
MIPS 32/64-bit r5/r6 MSA and Power 32/64-bit VMX/VSX (little/big-endian ISAs)
are mostly implemented, although scalar SIMD subset, horizontal SIMD reductions,
wider SIMD vectors with zeroing/merging predicates in 3/4-operand instructions,
larger register files and other architectures are planned as future extensions
to current 2-operand (destination-as-1st-source) SPMD-driven vertical SIMD ISA.

The project comes with a test framework for Linux/GCC, Windows/VC++/TDM64-GCC.
Instructions for resolving dependencies and building the binaries
for supported platforms can be found in the accompanying INSTALL file.

RooT (demo) features are as follows:
 - Move/rotate camera with W,S,A,D + arrow keys
 - Print state (to dump) of all objects in the scene (on F1)
 - Runtime toggling of antialiasing (on F2)
 - Runtime cycling through cameras (on F3)
 - Runtime saving (to dump) of BMP screenshots (on F4)
 - Runtime switching of SIMD targets (F6, F7, F8)
 - Runtime scene selection (F11), hide nums (F12)
 - Static multi-threading support, no core-count yet
 - Offscreen rendering support for benchmarking
 - Refer to VERSION file (section 0.6.7) for cli options

Engine core features are as follows:
 - Full set of plane+(unified)quadric solvers
 - Custom clipping (by surface), boolean ops
 - Full geometry transform (hierarchical)
 - Basic texturing (axis-aligned/single-layer RGB)
 - Ambient+diffuse+specular+attenuation lights
 - All lights are colored points with infinite range
 - Hard shadows (opaque) from all light sources
 - Reflections/refractions+translucency, no Fresnel yet
 - Fullscreen 4x/2x (fp32/fp64) antialiasing, no Gamma yet
 - Tiled scanline rendering, custom tree-like accelerators
 - Programmable animators for all objects (below root)
 - Statically-linkable data format (C/C++ structs)
 - 8-registers deep SIMD rendering pipeline (core/tracer)
 - Written on UniSIMD assembler
