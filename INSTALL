================================================================================

To build QuadRay engine demo on Linux, open terminal window,
go to the project's root folder,
make sure necessary tools and libraries are installed
for 32-bit systems:
    sudo apt-get install make g++ libxext-dev
for 64-bit systems:
    sudo apt-get install make g++-multilib libxext-dev:i386
run for x86 architecture:
    make -f RooT_make_x86.mk
    ./Root.x86
run for ARM architecture (inside scratchbox, see below):
    make -f RooT_make_arm.mk
    copy Root.arm over to N900 and run there
ARM builds are done in Maemo/scratchbox cross-compilation environment for N900:
    http://wiki.maemo.org/Documentation/Maemo_5_Final_SDK_Installation
Only DEB-based distributions (Mint, Ubuntu, Debian) are supported for now,
users of RPM-based distros need to figure out build-deps on their own.

================================================================================

To build QuadRay engine demo on Windows,
go to the project's root folder and open:
    RooT_workspace.dsw
in Visual C++ 6.0 or later, then press F5. In newer versions of VC++ agree to
convert workspace files, then exit and open newly created solution file.

================================================================================

To build SIMD test framework on Linux, open terminal window,
go to the project's root folder, then "test" subfolder,
make sure necessary tools and libraries are installed
for 32-bit systems:
    sudo apt-get install make g++
for 64-bit systems:
    sudo apt-get install make g++-multilib
run for x86 architecture:
    make -f simd_make_x86.mk
    ./simd_test.x86
run for ARM architecture (inside scratchbox, see below):
    make -f simd_make_arm.mk
    copy simd_test.arm over to N900 and run there
ARM builds are done in Maemo/scratchbox cross-compilation environment for N900:
    http://wiki.maemo.org/Documentation/Maemo_5_Final_SDK_Installation
Only DEB-based distributions (Mint, Ubuntu, Debian) are supported for now,
users of RPM-based distros need to figure out build-deps on their own.

================================================================================

To build SIMD test framework on Windows,
go to the project's root folder, then "test" subfolder and open:
    simd_workspace.dsw
in Visual C++ 6.0 or later, then press F5. In newer versions of VC++ agree to
convert workspace files, then exit and open newly created solution file.

================================================================================

To build core test framework on Linux, open terminal window,
go to the project's root folder, then "test" subfolder,
make sure necessary tools and libraries are installed
for 32-bit systems:
    sudo apt-get install make g++
for 64-bit systems:
    sudo apt-get install make g++-multilib
run for x86 architecture:
    make -f core_make_x86.mk
    ./core_test.x86
run for ARM architecture (inside scratchbox, see below):
    make -f core_make_arm.mk
    copy core_test.arm over to N900 and run there
ARM builds are done in Maemo/scratchbox cross-compilation environment for N900:
    http://wiki.maemo.org/Documentation/Maemo_5_Final_SDK_Installation
Only DEB-based distributions (Mint, Ubuntu, Debian) are supported for now,
users of RPM-based distros need to figure out build-deps on their own.

================================================================================

To build core test framework on Windows,
go to the project's root folder, then "test" subfolder and open:
    core_workspace.dsw
in Visual C++ 6.0 or later, then press F5. In newer versions of VC++ agree to
convert workspace files, then exit and open newly created solution file.

================================================================================
